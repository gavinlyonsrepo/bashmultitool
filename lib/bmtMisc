#!/bin/bash
# === HEADER ===
#FileName: bmtMisc
#Function: Contains miscellaneous utilities.
#library name: bashmultitool
#Written: Gavin Lyons
#URL: https://github.com/gavinlyonsrepo/BashMultiTool

# ===FUNCTIONS ===

function bmtMiscFunc
{

case "$1" in

	password) #801
		local mylengthVar=0
		if [ -z "$2" ]; then
			cd "/tmp/"  || return 3
		else
			cd "$2"  || return 3
		fi
		touch passwordBMT.txt
		echo "Random Password generator"
		echo "Enter length:-"
		read -r mylengthVar
		# if just enter pressed set default 20
		if [ -z "$mylengthVar" ]; then
			mylengthVar=20
		fi
		#check integer
		if [[ "$mylengthVar" != *[!0-9]* ]];then
			echo -n "$(< /dev/urandom tr -dc "_*?#!A-Z-a-z-0-9" | head -c "$mylengthVar";)">passwordBMT.txt
			echo "Password generated"
			return 0
		else
			return 2
		fi
	;;
	
	getbatlevel) #802
		local Filepath="/sys/class/power_supply/$2/capacity"
		if ! [[ -f $Filepath ]]; then
			echo "File '$Filepath' not found."
			return 101
		elif ! [[ -f $Filepath ]]; then
			echo "File '$Filepath' unreadable."
			return 102
		fi

		read -r < "/sys/class/power_supply/$2/capacity"
		if [ "$3" = "MES" ]
		then
			printf 'Battery is at %d%% capacity.\n' "$REPLY" # Reply is built into read.
		fi
		return "$REPLY"
	;;
	
	drawbox) #803
		local width
		local place
		local textarray=("$@") 
		local colorbox="$2"
		local colortext="$3"
		local inputparam
		
		# remove color's and subsection name from array
		for inputparam in 0 1 2 
		do
			unset 'textarray[inputparam]'
		done
			
		#${s[@]} – all elements of array s; ((width<${#l})) – ((..)) shell arithmetic testing 
		#whether variable width's value is less than variable l value's length, obtained
		#with parameter expansion (# – string length); ${place//?/-} – parameter expansion  
		#replacing all occurrences of any character with a “-” (// – replace all; ? – 
		#wildcard meaning any character). 
		for word in "${textarray[@]}"; do
			((width<${#word})) && { place="$word"; width="${#word}"; }
		done
		tput setaf "$colorbox"
		echo -e " -${place//?/-}-\n| ${place//?/ } |"
		for word in "${textarray[@]}"; do
			printf '| %s%*s%s |\n' "$(tput setaf "$colortext")" "-$width" "$word" "$(tput setaf "$colorbox")"
		done
		echo -e "| ${place//?/ } |\n -${place//?/-}-"
		tput sgr 0
	;;
	
	title)
		local colorbox="$2"
		local colortext="$3"
		local bannersymbol="$4"
		local textmsg="$5"
		
		edge=$(echo "$textmsg####" | sed "s/./$bannersymbol/g")
		
		tput setaf "$colorbox"
		printf '%s\n' "$edge"
		printf '%s%s%s%s%s\n' "$bannersymbol " "$(tput setaf "$colortext")" "$textmsg" "$(tput setaf "$colorbox")" " $bannersymbol"
		printf '%s\n' "$edge"
		tput sgr 0
		
	;;
	
	*) # Catch all users typos
		printf '%s\n'  "Error: Unknown keyword : bashMultiTool: bmtMisc: bmtMiscFunc"
		return 255
	;;
esac
}


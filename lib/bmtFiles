#!/bin/bash

# === HEADER ===
#FileName: bmtFiles
#Function: Contains file related utilities
#library name: bashmultitool
#Written: Gavin Lyons
#URL: https://github.com/gavinlyonsrepo/BashMultiTool

# === FUNCTIONS ===

function bmtFilesFunc
{

case "$1" in

	isdirempty) # 501
		if [ -d "$2" ]; then
			# the directory exists
			local checkVar=0
			checkVar=$(find "$2" -mindepth 1 -print | wc -l)
			if [  "$checkVar" == 0 ]; then
				return 0 #not empty
			else
				return 2 #empty
			fi
		else #dir does not exist
			return 3
		fi
	;;

	makedir) #502
		# make dir  makes a directory at path $2 with time/date stamp and enters it
		# appends $3 to directory name
		if [[ -d "$2" ]]; then
			cd "$2" || return 51
			local dirVar=""
			dirVar=$(date +%H%M-%d%b%y)"$3"
			mkdir -p "$dirVar"
			cd "$dirVar" || return 52
			printf '%s\n' "Directory made at:-"
			pwd
			return 0
		else
			return 50
		fi
	;;

	directoryexists) #  503
	if [[ -d "$2" ]]; then
		return 0
	fi
	return 2
	;;

	fileexists) #504
	if [[ -f "$2" ]]; then
		return 0
	fi
	return 2
	;;

	deviceexists) #  505
	if [[ -b "$2" ]]; then
		return 0
	fi
	return 2
	;;
	
	isfileempty) # 506
	if [ -s "$2" ]; then
		return 0 #not empty
	else
		return 2
	fi
	;;
	
	getfilesize) #507
	if [[ -f "$2" ]]; then
		du -h "$2" | cut -f1 
		return 0
	fi
	return 2
	;;
	
	getfilesizebytes) #508
	if [[ -f "$2" ]]; then
		wc -c  "$2" |  cut -d ' ' -f1
		return 0
	fi
	return 2
	;;
	
	getmimetype) #509
	 [ -z "$2" ] && return 2
	
	local inputdata="${2}"
	local mime_output
	
	if [[ -f "$inputdata" ]] || [[ -d "$inputdata" ]]; then
		if type -p mimetype &> /dev/null; then
			mime_output=$(mimetype --output-format %m "$inputdata")
		elif type -p file &> /dev/null; then
			mime_output=$(file --brief --mime-type "$inputdata")
		else
			return 3
		fi
	else
		return 4
	fi
	
	printf "%s" "${mime_output}"
	;;
	
	filename) #510 /tmp/text.txt
	[ -z "$2" ] && return 2
	case "$3" in
		1) #510-1 full filename  text.txt
			printf "%s" "${2##*/}" #  parameter expansion retain after /
		  ;;
		2) #510-2 basename text 
			local filename basename
			filename="${2##*/}" #  parameter expansion retain after /
			basename="${filename%.*}" # parameter expansion retain before .
			printf "%s" "${basename}"
		  ;;
		3) #510.3 extension .txt
			local filename extension
			filename="${2##*/}" #  parameter expansion retain after /
			extension="${filename##*.}" # parameter expansion after .
			[[ "${filename}" = "${extension}" ]] && return 4

			printf "%s" "${extension}"
		  ;;
		4) #folder path /tmp
			declare folderpath=${2:-.}
			folderpath=${2%/*} 
			printf "%s" "${folderpath}"
		  ;;
		*)
			return 3
		;;
	esac
	return 0
	;;
	
	*) # Catch all user typos
		printf '%s\n'  "Error: Unknown keyword : bashmultitool :bmtFiles : bmtFilesFunc"
		return 255
	;;

esac

}


